(function() {
  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};
templates['trip'] = template({"compiler":[8,">= 4.3.0"],"main":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=container.hooks.helperMissing, alias3="function", alias4=container.escapeExpression, lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return "<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"utf-8\">\r\n    <title>"
    + alias4(((helper = (helper = lookupProperty(helpers,"sitetitle") || (depth0 != null ? lookupProperty(depth0,"sitetitle") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"sitetitle","hash":{},"data":data,"loc":{"start":{"line":5,"column":11},"end":{"line":5,"column":24}}}) : helper)))
    + "</title>\r\n\r\n     <base href=\".\">\r\n\r\n    <link rel=\"stylesheet\" href=\"style.css\">\r\n\r\n    <script src=\"index.js\" type=\"module\" charset=\"utf-8\" defer></script>\r\n\r\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\"\r\n   integrity=\"sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==\"\r\n   crossorigin=\"\"/>\r\n\r\n   <script src=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\"\r\n  integrity=\"sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==\"\r\n  crossorigin=\"\"></script>\r\n\r\n  <!-- CSS and JS files for Search Box -->\r\n <script src=\"https://cdn-geoweb.s3.amazonaws.com/esri-leaflet/0.0.1-beta.5/esri-leaflet.js\"></script>\r\n\r\n <script src=\"https://cdn-geoweb.s3.amazonaws.com/esri-leaflet-geocoder/0.0.1-beta.5/esri-leaflet-geocoder.js\"></script>\r\n\r\n <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn-geoweb.s3.amazonaws.com/esri-leaflet-geocoder/0.0.1-beta.5/esri-leaflet-geocoder.css\">\r\n\r\n\r\n <link\r\n  rel=\"stylesheet\"\r\n  href=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet-geosearch/3.1.0/geosearch.css\"\r\n/>\r\n\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet-geosearch/3.1.0/bundle.min.js\"></script>\r\n\r\n<script src=\"/geosearch.js\" type=\"module\" charset=\"utf-8\" defer></script>\r\n  </head>\r\n\r\n\r\n\r\n<body>\r\n\r\n<!-- This link should take user back to \"homepage\" on click -->\r\n\r\n<header id=\"site-header\">\r\n  <h1 class=\"site-title\"><a href=\"#\">"
    + alias4(((helper = (helper = lookupProperty(helpers,"sitetitle") || (depth0 != null ? lookupProperty(depth0,"sitetitle") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"sitetitle","hash":{},"data":data,"loc":{"start":{"line":46,"column":37},"end":{"line":46,"column":50}}}) : helper)))
    + "</a></h1>\r\n\r\n</header>\r\n\r\n<div id=\"page-header\">\r\n    <h2 class=\"page-title\">"
    + alias4(((helper = (helper = lookupProperty(helpers,"pagetitle") || (depth0 != null ? lookupProperty(depth0,"pagetitle") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"pagetitle","hash":{},"data":data,"loc":{"start":{"line":51,"column":27},"end":{"line":51,"column":40}}}) : helper)))
    + "</h2>\r\n  </div>\r\n\r\n    <aside id=\"add-trip-container\">\r\n\r\n      <form id=\"location-form\">\r\n\r\n        <label type=\"text\" for=\"location\">Location:</label><br>\r\n        <input type=\"text\" id=\"location-input\" name=\"location\"><br>\r\n\r\n      </form>\r\n      Country:\r\n      <select id=\"add-country\">\r\n        <option selected value=\"\"> </option>\r\n        <option>Corvallis</option>\r\n        <option>Albany</option>\r\n        <option>Eugene</option>\r\n        <option>Portland</option>\r\n        <option>Salem</option>\r\n        <option>Bend</option>\r\n      </select>\r\n\r\n      <p>Start Date:\r\n      <input type=\"date\" id=\"trip-start-date\" class=\"trip-date\">\r\n    </p>\r\n\r\n      <p>End Date:\r\n        <input type=\"date\" id=\"trip-end-date\" class=\"trip-date\">\r\n      </p>\r\n\r\n    <button id=\"cancel-trip-button\">Cancel</button>\r\n    <button id=\"add-trip-button\">Add trip</button>\r\n\r\n  </aside>\r\n\r\n    <!-- <section id=\"map\">\r\n    <iframe width=\"425\" height=\"350\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\" src=\"https://www.openstreetmap.org/export/embed.html?bbox=-163.47656250000003%2C11.609193407938953%2C-50.44921875000001%2C57.326521225217064&amp;layer=mapnik\" style=\"border: 1px solid black\"></iframe><br/><small></small>\r\n    </section> -->\r\n\r\n<!-- Map goes here -->\r\n\r\n    <div id=\"mapid\"></div>\r\n\r\n</body>\r\n\r\n</html>\r\n\r\n<!-- /*\r\nNotes:\r\n- Trip info:\r\n  - The number of days should be dynamically generated depending on the trip duration\r\n  - Not sure what to do with cities, for now they're just for the user to see where\r\n  - they're going on a given day\r\n  - For the destinations, pressing the + button adds a new destination field\r\n  - while pressing the remove button removes the field\r\n  - In the HTML, each label has a \"for\" that matches the \"id\" of its related input\r\n  - I'm not sure why could that be useful yet, but I saw that in the MDN docs\r\n  - feel free te edit the HTML btw\r\n- Map:\r\n  - Ideally, it should be interactive with the user input\r\n  - for example, the user could select a location on the map\r\n  - and that will automatically be saved into the destination field\r\n  - Or maybe grab the adress, the website (if any), or the open hours of the chosen location\r\n  - For this project, we probably don't need to do all of that.\r\n  - We could probably get away with only showing the map, but at least one of these features would be cool\r\n- Action buttons\r\n  - Save should add the trip to the home page. Need to know what a trip card in the home page would look like.\r\n  - only the data displayed in the home page cards should be used. The rest of the data should be saved in our data file.\r\n  - Cancel just cancels obviously xD\r\n  - Both save and cancel should clear all the inputs\r\n  - Both should redirect to home page\r\n  - Honestly haven't looked into uploading images much\r\n*/ -->\r\n";
},"useData":true});
})();